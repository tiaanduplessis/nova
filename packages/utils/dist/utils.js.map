{"version":3,"file":"utils.js","sources":["../../is-arr/src/index.js","../../is-obj/src/index.js","../../is-num/src/index.js","../../sort-by-prop/src/index.js","../src/index.js","../../capitalize/src/index.js","../../compose/src/index.js","../../curry/src/index.js","../../debounce/src/index.js","../../filter/src/index.js","../../flatten/src/index.js","../../get-prop/src/index.js","../../has-prop/src/index.js","../../is-bool/src/index.js","../../is-empty/src/index.js","../../is-str/src/index.js","../../is-err/src/index.js","../../is-func/src/index.js","../../is-int/src/index.js","../../is-regex/src/index.js","../../noop/src/index.js","../../random-int/src/index.js","../../randomize-arr/src/index.js","../../throttle/src/index.js"],"sourcesContent":["/**\n * Check if value is a array\n * @param {*} val Value to check\n *\n * @returns {Boolean}\n *\n * @example\n * isArr([]) // true\n * isArr(1) // false\n */\nexport default function isArr(val) {\n  const is = Array.isArray || (arg => Object.prototype.toString.call(arg) === '[object Array]')\n  return val && is(val)\n}\n","/**\n * Check if value is object\n * @param {*} val Value to check\n */\nexport default function isObj(val) {\n  return val && typeof val === 'object' && val.constructor === Object\n}\n","/**\n * Check if one or more values are numbers\n * @param {*...} values One or more values to check\n */\nexport default function isNum(...values) {\n  return values.every(val =>  Object.prototype.toString.call(val) === '[object Number]' && isFinite(val) ) // eslint-disable-line\n}\n","const defaultCompareFunc = key => (a, b) => {\n  if (a[key] > b[key]) {\n    return 1\n  }\n\n  return (b[key] > a[key]) ? -1 : 0\n}\n\n/**\n * Sort array by object property\n * @param {Array} arr Array of objects\n * @param {String} key Property to short by\n * @param {Function} compareFunc Camparison function\n */\nexport default function sortBy(arr = [], key, compareFunc = defaultCompareFunc) {\n  return arr.sort(compareFunc(key))\n}\n","import capitalize from '../../capitalize/src/index'\nimport compose from '../../compose/src/index'\nimport curry from '../../curry/src/index'\nimport debounce from '../../debounce/src/index'\nimport filter from '../../filter/src/index'\nimport flatten from '../../flatten/src/index'\nimport getProp from '../../get-prop/src/index'\nimport hasProp from '../../has-prop/src/index'\nimport isArr from '../../is-arr/src/index'\nimport isBool from '../../is-bool/src/index'\nimport isEmpty from '../../is-empty/src/index'\nimport isErr from '../../is-err/src/index'\nimport isFunc from '../../is-func/src/index'\nimport isInt from '../../is-int/src/index'\nimport isNum from '../../is-num/src/index'\nimport isObj from '../../is-obj/src/index'\nimport isRegex from '../../is-regex/src/index'\nimport noop from '../../noop/src/index'\nimport randomInt from '../../random-int/src/index'\nimport randomizeArr from '../../randomize-arr/src/index'\nimport sortByProp from '../../sort-by-prop/src/index'\nimport throttle from '../../throttle/src/index'\n\nexport default {\n  capitalize,\n  compose,\n  curry,\n  debounce,\n  filter,\n  flatten,\n  getProp,\n  hasProp,\n  isArr,\n  isBool,\n  isEmpty,\n  isErr,\n  isFunc,\n  isInt,\n  isNum,\n  isObj,\n  isRegex,\n  noop,\n  randomInt,\n  randomizeArr,\n  sortByProp,\n  throttle,\n}\n","/**\n * Capitalize each word in a string\n * @param {String} val String to capitalize\n *\n * @returns {String}\n *\n * @example\n * capitalize('foo') // 'Foo'\n * capitalize('BAR BAZ') // 'Bar Baz'\n */\nexport default function capitalize(val = '') {\n  return val.toLowerCase().replace(/(^|\\s)\\S/g, letter => letter.toUpperCase())\n}\n","\n/**\n * Compose functions\n * @param {...*} funcs Functions to compose\n *\n * @returns {*}\n *\n * @example\n * const addOne = x => x + 1\n * const addThree = compose(addOne, addOne, addOne)\n *\n * addThree(3) // 6\n */\nexport default function compose(...funcs) {\n  return data => funcs.reduceRight((value, func) => func(value), data)\n}\n","/**\n * Curry a function\n * @param {Function} func Function to curry\n * @param {...*=} args Arguments to function\n *\n * @returns {*}\n *\n * @example\n * const add = (x, y) => x + y\n * const addTwo = curry(add, 2)\n * addTwo(4) // 6\n */\nexport default function curry(func, ...args) {\n  return args.length === func.length ? func(...args) : curry.bind(this, func, ...args)\n}\n","\n\n/**\n * Debounce function invocations\n * @param {Function} func Function to debounce\n * @param {Integer=} wait Wait period\n * @param {Boolean=} immediate Whether function should be invoked immediately\n *\n * @example\n * function log() { console.log('hi') }\n * const debouncedLog = debounce(log)\n * debouncedLog()\n * debouncedLog()\n * debouncedLog() // Hi\n */\nexport default function debounce(func, wait = 250, immediate = false) {\n  let timeout\n  return function inner(...args) {\n    const later = () => {\n      timeout = null\n      !immediate && func.apply(this, args) // eslint-disable-line\n    }\n    const shouldCall = immediate && !timeout\n    clearTimeout(timeout)\n    timeout = setTimeout(later, wait)\n    shouldCall && func.apply(this, args) // eslint-disable-line\n  }\n}\n","/**\n * Iterates over elements returning an array of all elements predicate returns truthy\n *\n * @param {Function} func Predicate to filter by\n * @param {Array=} arg Array to filter\n *\n * @returns {Array}\n *\n * @example\n * const items = [1, 2, 3, 4]\n * const isMoreThanTwo = x => x > 2\n *\n * filter(isMoreThanTwo)(items) // [3, 4]\n * filter(isMoreThanTwo, items) // [3, 4]\n */\nexport default function filter(func, arg) {\n  if (arg) {\n    return Array.prototype.filter.call(arg, func)\n  }\n\n  return data => Array.prototype.filter.call(data, func)\n}\n","/**\n * Flattens array\n * @param {Array} arr Array to flatten\n * @param {Boolean} deeply Flatten deeply\n *\n * @returns {Array}\n *\n * @example\n * flatten([1, [2, 3]]) // [1, 2, 3]\n */\nexport default function flatten(arr = [], deeply = true) {\n  return arr.reduce((acc, current) => (deeply && Array.isArray(current) ? acc.concat(flatten(current, deeply)) : acc.concat(current)), []) // eslint-disable-line\n}\n","/**\n * Get a nested object property using dot notation\n * @param {Object} obj Object to get property from\n * @param {String} key Key to find\n * @param {Any} def Default value if key not find\n */\nexport default function getProp(obj, key, def) {\n  return (key.split ? key.split('.') : [key]).reduce((Level, current) => Level[current], obj) || def\n}\n","\n/**\n * Check if nested key exists in a object\n * @param {Object} obj Object to check\n * @param {String} key Key to find\n */\nexport default function hasProp(obj, key) {\n  return (key.split ? key.split('.') : [key]).reduce((level, current) => level[current], obj) !== undefined\n}\n","/**\n * Check if value is boolean\n * @param {*} val Value to check\n *\n * @returns {Boolean}\n *\n * @example\n * isBool(true) // true\n * isBool(false) // true\n * isBool(1) // false\n */\nexport default function isBool(val) {\n  return val !== undefined && (typeof val === 'boolean' || val instanceof Boolean)\n}\n","import isStr from '../../is-str/src'\nimport isArr from '../../is-arr/src'\nimport isObj from '../../is-obj/src'\n\n/**\n * Check if string, object or array empty\n * @param {*} val Value to check\n */\nexport default function isEmpty(val = '') {\n  return (isStr(val) && val === '') || (isArr(val) && val.length === 0) || (isObj(val) && Object.keys(val).length === 0)\n}\n","\n/**\n * Check if\n * @param {any} val Value to check\n */\nexport default function isStr(...args) {\n  return args.every(val => Object.prototype.toString.call(val) === '[object String]')\n}\n","/**\n * Check if value is error\n * @param {*} val Value to check\n *\n * @returns {Boolean}\n *\n * @example\n * isErr(new Error('example')) // true\n * isErr('example') // false\n */\nexport default function isErr(val) {\n  return val && val instanceof Error && typeof val.message !== 'undefined'\n}\n","\n/**\n * Check if one or more values are functions\n * @param {*...} values values to check\n *\n * @returns {Boolean}\n *\n * @example\n * import isFunc from 'nova-is-func'\n * isFunc(() => {}) // true\n * isFunc(false) // false\n */\nexport default function isFunc(...values) {\n  return values.every(val => Object.prototype.toString.call(val) === '[object Function]')\n}\n","import isNum from '../../is-num/src'\n\n/**\n * Check if one or more values are integers\n * @param {*} val Value to check\n *\n * @example\n * import isInt from 'nova-is-num'\n * isInt(1) // true\n * isInt(1, 2, 3) // true\n * isInt(1.1) // false\n */\nexport default function isInt(...values) {\n  return values.every(val => isNum(val) && Number.isInteger(val))\n}\n","export default function isRegex(val) {\n  return val && typeof val === 'object' && val.constructor === RegExp\n}\n","/**\n * Performs no operation\n *\n * @returns undefined\n *\n * @example\n * import noop from 'nova-noop'\n * console.log(noop()) // undefined\n */\nexport default function noop() {\n}\n","/**\n * Get a random integer in range\n * @param {Integer} min Minimum value\n * @param {Integer} max Maximum value\n */\nexport default function random(min, max) {\n  return min + Math.floor(Math.random() * (max - min + 1))\n}\n","/**\n * Randomize items in array\n * @param {Array} arr Array to randomize\n */\nexport default function randomize(arr) {\n  const newArr = [...arr]\n\n  for (let i = newArr.length - 1; i > 0; i--) { // eslint-disable-line\n    const rand = Math.floor(Math.random() * (i + 1));\n    [newArr[i], newArr[rand]] = [newArr[rand], newArr[i]]\n  }\n\n  return newArr\n}\n","\n/**\n * Throttle a function's invocation\n * @param {Function} func Function to throttle\n * @param {Integer} wait Wait in miliseconds\n *\n * import throttle from 'nova-throttle'\n *\n * const sayHi = () => console.log('Hi')\n *\n * const throttledHi = throttle(sayHi, 1000)\n *\n * throttledHi() // 'Hi'\n * throttledHi()\n * throttledHi()\n */\nexport default function throttle(func, delay = 250) {\n  if (typeof func !== 'function') {\n    throw new Error('function must be provided for trottle')\n  }\n\n  let shouldWait = false\n\n  return (...args) => {\n    if (!shouldWait) {\n      func(...args)\n      shouldWait = true\n      setTimeout(() => {\n        shouldWait = false\n      }, delay)\n    }\n  }\n}\n"],"names":["isArr","val","const","is","Array","isArray","arg","Object","prototype","toString","call","isObj","constructor","isNum","values","every","isFinite","defaultCompareFunc","key","a","b","toLowerCase","replace","letter","toUpperCase","data","funcs","reduceRight","value","func","curry","args","length","bind","this","wait","immediate","let","timeout","shouldCall","clearTimeout","setTimeout","apply","filter","flatten","arr","deeply","reduce","acc","current","concat","obj","def","split","Level","undefined","level","Boolean","isStr","keys","Error","message","Number","isInteger","RegExp","min","max","Math","floor","random","newArr","i","rand","compareFunc","sort","delay","shouldWait"],"mappings":"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"}