{"version":3,"file":"is-empty.es.js","sources":["../src/index.js","../../is-str/src/index.js","../../is-arr/src/index.js","../../is-obj/src/index.js"],"sourcesContent":["import isStr from '../../is-str/src'\nimport isArr from '../../is-arr/src'\nimport isObj from '../../is-obj/src'\n\n/**\n * Check if string, object or array empty\n * @param {*} val Value to check\n */\nexport default function isEmpty(val = '') {\n  return (isStr(val) && val === '') || (isArr(val) && val.length === 0) || (isObj(val) && Object.keys(val).length === 0)\n}\n","\n/**\n * Check if\n * @param {any} val Value to check\n */\nexport default function isStr(...args) {\n  return args.every(val => Object.prototype.toString.call(val) === '[object String]')\n}\n","/**\n * Check if value is a array\n * @param {*} val Value to check\n *\n * @returns {Boolean}\n *\n * @example\n * isArr([]) // true\n * isArr(1) // false\n */\nexport default function isArr(val) {\n  const is = Array.isArray || (arg => Object.prototype.toString.call(arg) === '[object Array]')\n  return val && is(val)\n}\n","/**\n * Check if value is object\n * @param {*} val Value to check\n */\nexport default function isObj(val) {\n  return val && typeof val === 'object' && val.constructor === Object\n}\n"],"names":["val","args","every","Object","prototype","toString","call","isStr","const","is","Array","isArray","arg","isArr","length","constructor","isObj","keys"],"mappings":"eAQe,SAAiBA,GAC9B,sBADoC,ICHvB,kEACb,OAAOC,EAAKC,eAAMF,SAA+C,oBAAxCG,OAAOC,UAAUC,SAASC,KAAKN,KDGhDO,CAAMP,IAAgB,KAARA,GECT,SAAeA,GAC5BQ,IAAMC,EAAKC,MAAMC,kBAAYC,SAA+C,mBAAxCT,OAAOC,UAAUC,SAASC,KAAKM,IACnE,OAAOZ,GAAOS,EAAGT,GFHqBa,CAAMb,IAAuB,IAAfA,EAAIc,QGL3C,SAAed,GAC5B,OAAOA,GAAsB,iBAARA,GAAoBA,EAAIe,cAAgBZ,OHIaa,CAAMhB,IAAoC,IAA5BG,OAAOc,KAAKjB,GAAKc"}